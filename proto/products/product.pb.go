// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/products/product.proto

/*
Package products is a generated protocol buffer package.

It is generated from these files:
	proto/products/product.proto

It has these top-level messages:
	UpsertProductsReq
	UpsertProductsRsp
	ProductsReq
	ProductsRsp
	Product
*/
package products

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpsertProductsReq struct {
	Products []*Product `protobuf:"bytes,1,rep,name=products" json:"products,omitempty"`
}

func (m *UpsertProductsReq) Reset()                    { *m = UpsertProductsReq{} }
func (m *UpsertProductsReq) String() string            { return proto.CompactTextString(m) }
func (*UpsertProductsReq) ProtoMessage()               {}
func (*UpsertProductsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UpsertProductsReq) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type UpsertProductsRsp struct {
	Products []*Product `protobuf:"bytes,1,rep,name=products" json:"products,omitempty"`
}

func (m *UpsertProductsRsp) Reset()                    { *m = UpsertProductsRsp{} }
func (m *UpsertProductsRsp) String() string            { return proto.CompactTextString(m) }
func (*UpsertProductsRsp) ProtoMessage()               {}
func (*UpsertProductsRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UpsertProductsRsp) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type ProductsReq struct {
}

func (m *ProductsReq) Reset()                    { *m = ProductsReq{} }
func (m *ProductsReq) String() string            { return proto.CompactTextString(m) }
func (*ProductsReq) ProtoMessage()               {}
func (*ProductsReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ProductsRsp struct {
	Products []*Product `protobuf:"bytes,1,rep,name=products" json:"products,omitempty"`
}

func (m *ProductsRsp) Reset()                    { *m = ProductsRsp{} }
func (m *ProductsRsp) String() string            { return proto.CompactTextString(m) }
func (*ProductsRsp) ProtoMessage()               {}
func (*ProductsRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProductsRsp) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

type Product struct {
	// @inject_tag: bson:"_id" valid:"uuidv4~Product ID must be a valid UUIDv4" conform:"trim"
	ID string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty" bson:"_id" valid:"uuidv4~Product ID must be a valid UUIDv4" conform:"trim"`
	// @inject_tag: bson:"name" valid:"required~Product name is required" conform:"trim"
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty" bson:"name" valid:"required~Product name is required" conform:"trim"`
	// @inject_tag: bson:"slug" valid:"required~Product slug is required" conform:"trim,slug"
	Slug string `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty" bson:"slug" valid:"required~Product slug is required" conform:"trim,slug"`
	// @inject_tag: bson:"price" valid:"required~Product price is required"
	Price float32 `protobuf:"fixed32,4,opt,name=price" json:"price,omitempty" bson:"price" valid:"required~Product price is required"`
	// @inject_tag: bson:"currency" valid:"required~Product currency is required"
	Currency string `protobuf:"bytes,5,opt,name=currency" json:"currency,omitempty" bson:"currency" valid:"required~Product currency is required"`
	// @inject_tag: bson:"image_url" valid:"url~Product image must be a valid URL format"
	ImageUrl string `protobuf:"bytes,6,opt,name=image_url,json=imageUrl" json:"image_url,omitempty" bson:"image_url" valid:"url~Product image must be a valid URL format"`
	// @inject_tag: bson:"category_url" valid:"required~Product categories url is required,url~Product category url must be a valid URL format"
	CategoryUrl string `protobuf:"bytes,7,opt,name=category_url,json=categoryUrl" json:"category_url,omitempty" bson:"category_url" valid:"required~Product categories url is required,url~Product category url must be a valid URL format"`
	// @inject_tag: bson:"url" valid:"required~Product url is required,url~Product url must be a valid URL format"
	Url string `protobuf:"bytes,8,opt,name=url" json:"url,omitempty" bson:"url" valid:"required~Product url is required,url~Product url must be a valid URL format"`
	// @inject_tag: bson:"rating"
	Rating float32 `protobuf:"fixed32,9,opt,name=rating" json:"rating,omitempty" bson:"rating"`
	// @inject_tag: bson:"brand"
	Brand string `protobuf:"bytes,10,opt,name=brand" json:"brand,omitempty" bson:"brand"`
	// @inject_tag: bson:"hidden"
	Hidden bool `protobuf:"varint,11,opt,name=hidden" json:"hidden,omitempty" bson:"hidden"`
	// @inject_tag: bson:"created_at"
	CreatedAt *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt" json:"created_at,omitempty" bson:"created_at"`
	// @inject_tag: bson:"updated_at"
	UpdatedAt *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty" bson:"updated_at"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Product) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Product) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Product) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Product) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *Product) GetCategoryUrl() string {
	if m != nil {
		return m.CategoryUrl
	}
	return ""
}

func (m *Product) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Product) GetRating() float32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Product) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Product) GetHidden() bool {
	if m != nil {
		return m.Hidden
	}
	return false
}

func (m *Product) GetCreatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Product) GetUpdatedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func init() {
	proto.RegisterType((*UpsertProductsReq)(nil), "go.micro.srv.products.UpsertProductsReq")
	proto.RegisterType((*UpsertProductsRsp)(nil), "go.micro.srv.products.UpsertProductsRsp")
	proto.RegisterType((*ProductsReq)(nil), "go.micro.srv.products.ProductsReq")
	proto.RegisterType((*ProductsRsp)(nil), "go.micro.srv.products.ProductsRsp")
	proto.RegisterType((*Product)(nil), "go.micro.srv.products.Product")
}

func init() { proto.RegisterFile("proto/products/product.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x14, 0x54, 0x92, 0xdd, 0x6e, 0xf2, 0xb2, 0xbb, 0x80, 0x05, 0xc8, 0x0a, 0x08, 0x42, 0x4f, 0x39,
	0xb9, 0x52, 0x39, 0xc1, 0x6d, 0xd1, 0x5e, 0x7a, 0x02, 0x05, 0x7a, 0xe1, 0x52, 0xb9, 0x89, 0x09,
	0x91, 0x92, 0xd8, 0xd8, 0x4e, 0xa5, 0x1e, 0xf9, 0x3e, 0x7e, 0x0a, 0xd9, 0x89, 0xa3, 0x22, 0x0a,
	0x5d, 0xa9, 0xb7, 0x37, 0xf3, 0x66, 0x46, 0x2f, 0xf1, 0xc0, 0x4b, 0x21, 0xb9, 0xe6, 0x0b, 0x21,
	0x79, 0xd9, 0x17, 0x5a, 0xb9, 0x81, 0x58, 0x1a, 0x3d, 0xab, 0x38, 0x69, 0xeb, 0x42, 0x72, 0xa2,
	0xe4, 0x8e, 0x38, 0x51, 0xf2, 0xba, 0xe2, 0xbc, 0x6a, 0xd8, 0xc2, 0x8a, 0xb6, 0xfd, 0xb7, 0x85,
	0xae, 0x5b, 0xa6, 0x34, 0x6d, 0xc5, 0xe0, 0x9b, 0x7f, 0x84, 0x27, 0x6b, 0xa1, 0x98, 0xd4, 0x9f,
	0x46, 0x4b, 0xce, 0x7e, 0xa0, 0xf7, 0x10, 0xba, 0x04, 0xec, 0xa5, 0x41, 0x16, 0x2f, 0x5f, 0x91,
	0xa3, 0xf9, 0x64, 0x74, 0xe5, 0x93, 0xfe, 0x48, 0xa0, 0x12, 0x67, 0x05, 0xde, 0x40, 0x7c, 0x70,
	0xdb, 0x7c, 0x75, 0x00, 0xcf, 0x4c, 0xfe, 0x19, 0xc0, 0xd5, 0xc8, 0xa2, 0x5b, 0xf0, 0x57, 0xf7,
	0xd8, 0x4b, 0xbd, 0x2c, 0xca, 0xfd, 0xd5, 0x3d, 0x42, 0x70, 0xd1, 0xd1, 0x96, 0x61, 0xdf, 0x32,
	0x76, 0x36, 0x9c, 0x6a, 0xfa, 0x0a, 0x07, 0x03, 0x67, 0x66, 0xf4, 0x14, 0x2e, 0x85, 0xac, 0x0b,
	0x86, 0x2f, 0x52, 0x2f, 0xf3, 0xf3, 0x01, 0xa0, 0x04, 0xc2, 0xa2, 0x97, 0x92, 0x75, 0xc5, 0x1e,
	0x5f, 0x5a, 0xf5, 0x84, 0xd1, 0x0b, 0x88, 0xea, 0x96, 0x56, 0x6c, 0xd3, 0xcb, 0x06, 0xcf, 0x86,
	0xa5, 0x25, 0xd6, 0xb2, 0x41, 0x6f, 0xe0, 0xba, 0xa0, 0x9a, 0x55, 0x5c, 0xee, 0xed, 0xfe, 0xca,
	0xee, 0x63, 0xc7, 0x19, 0xc9, 0x63, 0x08, 0xcc, 0x26, 0xb4, 0x1b, 0x33, 0xa2, 0xe7, 0x30, 0x93,
	0x54, 0xd7, 0x5d, 0x85, 0x23, 0x7b, 0xc4, 0x88, 0xcc, 0x6d, 0x5b, 0x49, 0xbb, 0x12, 0x83, 0xd5,
	0x0e, 0xc0, 0xa8, 0xbf, 0xd7, 0x65, 0xc9, 0x3a, 0x1c, 0xa7, 0x5e, 0x16, 0xe6, 0x23, 0x42, 0xef,
	0x00, 0x0a, 0xc9, 0xa8, 0x66, 0xe5, 0x86, 0x6a, 0x7c, 0x9d, 0x7a, 0x59, 0xbc, 0x4c, 0xc8, 0xd0,
	0x1f, 0xe2, 0xfa, 0x43, 0xbe, 0xb8, 0xfe, 0xe4, 0xd1, 0xa8, 0xbe, 0xd3, 0xc6, 0xda, 0x8b, 0xd2,
	0x59, 0x6f, 0x4e, 0x5b, 0x47, 0xf5, 0x9d, 0x5e, 0xfe, 0xf2, 0xe0, 0x91, 0x7b, 0xcf, 0xcf, 0x4c,
	0xee, 0xcc, 0xdf, 0x2b, 0xe1, 0xf6, 0xcf, 0x0a, 0xa1, 0xec, 0x1f, 0x6f, 0xfa, 0x57, 0x75, 0x93,
	0x07, 0x2a, 0x95, 0x40, 0x39, 0x84, 0x53, 0xfe, 0xfc, 0xff, 0x9d, 0xb1, 0xc9, 0x27, 0x35, 0x4a,
	0x7c, 0x80, 0xaf, 0x53, 0xbb, 0xb6, 0x33, 0xfb, 0xe1, 0x6f, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x00, 0x03, 0x89, 0xb2, 0xb8, 0x03, 0x00, 0x00,
}
